{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\School\\\\Years\\\\Fall 2020\\\\SENG513\\\\chat\\\\client\\\\src\\\\components\\\\ChatList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/ChatList.css\";\nimport Message from \"./Message\";\nexport default function ChatList({\n  listItems,\n  onlineUsers,\n  type,\n  user\n}) {\n  _s();\n\n  const [usersList, setUsersList] = useState([]);\n  useEffect(() => {\n    // sorting users for online bar so user is on top\n    if (user) {\n      let onlineUsersList = usersList;\n\n      if (type === \"online\") {\n        onlineUsersList = onlineUsersList.filter(u => {\n          return u.username !== user.username;\n        });\n        onlineUsersList.unshift(user);\n        console.log(\"USERS LIST:\", onlineUsersList);\n      }\n\n      setUsersList(onlineUsersList);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatList \" + type + \"Box\",\n    id: type,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollContainer\",\n      children: typeof listItems !== typeof 2 && listItems.length > 0 && listItems.map(item => {\n        return /*#__PURE__*/_jsxDEV(Message, {\n          item: item,\n          onlineUsers: usersList,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatList, \"Q1yz5yDiiPiROB+2jzYJDKCJmG4=\");\n\n_c = ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["C:/Users/HP/Documents/School/Years/Fall 2020/SENG513/chat/client/src/components/ChatList.js"],"names":["React","useEffect","useState","Message","ChatList","listItems","onlineUsers","type","user","usersList","setUsersList","onlineUsersList","filter","u","username","unshift","console","log","length","map","item"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,wBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,SAAD;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,IAAzB;AAA+BC,EAAAA;AAA/B,CAAlB,EAAwD;AAAA;;AAEnE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIO,IAAJ,EAAU;AACN,UAAIG,eAAe,GAAGF,SAAtB;;AACA,UAAIF,IAAI,KAAK,QAAb,EAAuB;AACnBI,QAAAA,eAAe,GAAGA,eAAe,CAACC,MAAhB,CAAuBC,CAAC,IAAI;AAC1C,iBAAOA,CAAC,CAACC,QAAF,KAAeN,IAAI,CAACM,QAA3B;AACH,SAFiB,CAAlB;AAGAH,QAAAA,eAAe,CAACI,OAAhB,CAAwBP,IAAxB;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,eAA3B;AACH;;AACDD,MAAAA,YAAY,CAACC,eAAD,CAAZ;AACH;AACJ,GAbQ,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAE,cAAcJ,IAAd,GAAqB,KAArC;AAA4C,IAAA,EAAE,EAAEA,IAAhD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA,gBAEQ,OAAOF,SAAP,KAAsB,OAAO,CAA7B,IAAmCA,SAAS,CAACa,MAAV,GAAmB,CAAtD,IAA2Db,SAAS,CAACc,GAAV,CAAcC,IAAI,IAAI;AAC7E,4BAAO,QAAC,OAAD;AAAS,UAAA,IAAI,EAAEA,IAAf;AAAqB,UAAA,WAAW,EAAEX,SAAlC;AAA6C,UAAA,IAAI,EAAED;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAF0D;AAFnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA/BuBJ,Q;;KAAAA,Q","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport \"../styles/ChatList.css\"\r\nimport Message from \"./Message\";\r\n\r\nexport default function ChatList({listItems, onlineUsers, type, user}) {\r\n\r\n    const [usersList, setUsersList] = useState([])\r\n\r\n    useEffect(() => {\r\n        // sorting users for online bar so user is on top\r\n        if (user) {\r\n            let onlineUsersList = usersList\r\n            if (type === \"online\") {\r\n                onlineUsersList = onlineUsersList.filter(u => {\r\n                    return u.username !== user.username\r\n                })\r\n                onlineUsersList.unshift(user)\r\n                console.log(\"USERS LIST:\", onlineUsersList)\r\n            }\r\n            setUsersList(onlineUsersList)\r\n        }\r\n    }, )\r\n\r\n\r\n    return (\r\n        <div className={\"chatList \" + type + \"Box\"} id={type}>\r\n            <div className={\"scrollContainer\"}>\r\n                {\r\n                    typeof(listItems) !== typeof(2) && listItems.length > 0 && listItems.map(item => {\r\n                        return <Message item={item} onlineUsers={usersList} user={user}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}