{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\School\\\\Years\\\\Fall 2020\\\\SENG513\\\\chat\\\\client\\\\src\\\\screens\\\\ChatScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/ChatScreen.css\";\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport io from \"socket.io-client\";\nimport Header from \"../components/Header\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport MessageInput from \"../components/MessageInput\";\nconst ENDPOINT = \"http://localhost:5000/\";\nconst socket = io(ENDPOINT);\nexport default function ChatScreen() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n\n  const getCookieValue = cookieName => {\n    const name = cookieName + \"=\";\n    const allCookies = document.cookie.split(';');\n\n    for (let i = 0; i < allCookies.length; i++) {\n      const cookie = allCookies[i].trim();\n\n      if (cookie.startsWith(name)) {\n        return cookie.split(\"=\")[1];\n      }\n    }\n\n    return \"\";\n  };\n\n  const setCookie = (cookieName, cookieValue) => {\n    document.cookie = cookieName + \"=\" + cookieValue + \";\";\n  };\n\n  const showCommandError = command => {\n    showErrorMessage(`Sorry, ${command} is not a valid command. Please try again.`, \"Command Error\");\n  };\n\n  const showErrorMessage = (message, title) => {\n    NotificationManager.error(message, title, 5000);\n  };\n\n  const showInfoMessage = (message, title) => {\n    NotificationManager.info(message, title, 5000);\n  };\n\n  const showSuccessMessage = (message, title) => {\n    NotificationManager.success(message, title, 5000);\n  };\n\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"invalid color\", newColor => {\n        newColor = newColor.split('#')[1];\n        const message = `${newColor} is not a valid color code.`;\n        const title = \"Error: Invalid Color Code\";\n        showErrorMessage(message, title);\n      });\n      socket.on(\"new user\", ({\n        user,\n        itemChanged\n      }) => {\n        setUser(user);\n\n        if (itemChanged === \"new\") {\n          showInfoMessage(`Welcome to the chat, ${user.username}.`, \"Hi there!\", 5000);\n          setCookie(\"username\", user.username);\n          setCookie(\"color\", user.color);\n          console.log(document.cookie);\n        } else if (itemChanged === \"existing username\") {\n          showInfoMessage(`Welcome to the chat, ${user.username}.`, \"Hi there!\", 5000);\n        } else if (itemChanged === \"existing\") {\n          showInfoMessage(`Hello again, ${user.username}.`, \"Welcome back!\");\n        } else {\n          showSuccessMessage(itemChanged + \" successfully changed.\", \"Success!\", 5000);\n\n          if (itemChanged === \"Color\") {\n            setCookie(\"color\", user.color);\n          } else {\n            setCookie(\"username\", user.username);\n          }\n        }\n      });\n      socket.on(\"updated messages\", messages => {\n        setMessages(messages);\n        const chat = document.getElementById(\"chat\");\n        chat.scrollTop = chat.scrollHeight;\n      });\n      socket.on(\"updated users\", users => {\n        setOnlineUsers(users);\n      });\n      socket.on(\"user connected\", () => {\n        const username = getCookieValue(\"username\");\n\n        if (username !== \"\") {\n          const color = getCookieValue(\"color\");\n          socket.emit(\"existing user\", {\n            username: username,\n            color: color\n          });\n        } else {\n          socket.emit(\"new user\");\n        }\n      });\n      socket.on(\"username taken\", newUsername => {\n        const message = `${newUsername} has already been taken. Please pick a different username.`;\n        const title = \"Error: Username Taken\";\n        showErrorMessage(message, title);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"C H A T R O O M\",\n      type: \"main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(ChatContainer, {\n        header: true,\n        listItems: onlineUsers,\n        onlineUsers: onlineUsers,\n        type: \"online\",\n        user: user,\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          text: \"Online\",\n          type: \"sub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n        listItems: messages,\n        onlineUsers: onlineUsers,\n        type: \"chat\",\n        user: user,\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          showCommandError: showCommandError,\n          socket: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatScreen, \"MbQR8BwFYL48i0/na7jDaTOmvuU=\");\n\n_c = ChatScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"sources":["C:/Users/HP/Documents/School/Years/Fall 2020/SENG513/chat/client/src/screens/ChatScreen.js"],"names":["React","useEffect","useState","NotificationContainer","NotificationManager","io","Header","ChatContainer","MessageInput","ENDPOINT","socket","ChatScreen","user","setUser","onlineUsers","setOnlineUsers","messages","setMessages","getCookieValue","cookieName","name","allCookies","document","cookie","split","i","length","trim","startsWith","setCookie","cookieValue","showCommandError","command","showErrorMessage","message","title","error","showInfoMessage","info","showSuccessMessage","success","on","newColor","itemChanged","username","color","console","log","chat","getElementById","scrollTop","scrollHeight","users","emit","newUsername"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,0BAAP;AACA,OAAO,2CAAP;AACA,SAAQC,qBAAR,EAA+BC,mBAA/B,QAAyD,qBAAzD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,MAAMC,QAAQ,GAAG,wBAAjB;AAEA,MAAMC,MAAM,GAAGL,EAAE,CAACI,QAAD,CAAjB;AAEA,eAAe,SAASE,UAAT,GAAsB;AAAA;;AAEjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMgB,cAAc,GAAIC,UAAD,IAAgB;AACnC,UAAMC,IAAI,GAAGD,UAAU,GAAG,GAA1B;AACA,UAAME,UAAU,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAnB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGJ,UAAU,CAACK,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,YAAMF,MAAM,GAAGF,UAAU,CAACI,CAAD,CAAV,CAAcE,IAAd,EAAf;;AACA,UAAIJ,MAAM,CAACK,UAAP,CAAkBR,IAAlB,CAAJ,EAA6B;AACzB,eAAOG,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAP;AACH;AACJ;;AACD,WAAO,EAAP;AACH,GAVD;;AAYA,QAAMK,SAAS,GAAG,CAACV,UAAD,EAAaW,WAAb,KAA6B;AAC3CR,IAAAA,QAAQ,CAACC,MAAT,GAAkBJ,UAAU,GAAG,GAAb,GAAmBW,WAAnB,GAAiC,GAAnD;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,OAAD,IAAa;AAClCC,IAAAA,gBAAgB,CAAE,UAASD,OAAQ,4CAAnB,EAAgE,eAAhE,CAAhB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzC/B,IAAAA,mBAAmB,CAACgC,KAApB,CAA0BF,OAA1B,EAAmCC,KAAnC,EAA0C,IAA1C;AACH,GAFD;;AAIA,QAAME,eAAe,GAAG,CAACH,OAAD,EAAUC,KAAV,KAAoB;AACxC/B,IAAAA,mBAAmB,CAACkC,IAApB,CAAyBJ,OAAzB,EAAkCC,KAAlC,EAAyC,IAAzC;AACH,GAFD;;AAIA,QAAMI,kBAAkB,GAAG,CAACL,OAAD,EAAUC,KAAV,KAAoB;AAC3C/B,IAAAA,mBAAmB,CAACoC,OAApB,CAA4BN,OAA5B,EAAqCC,KAArC,EAA4C,IAA5C;AACH,GAFD;;AAIAlC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAAC+B,EAAP,CAAU,eAAV,EAA4BC,QAAD,IAAc;AACrCA,QAAAA,QAAQ,GAAGA,QAAQ,CAAClB,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AACA,cAAMU,OAAO,GAAI,GAAEQ,QAAS,6BAA5B;AACA,cAAMP,KAAK,GAAG,2BAAd;AACAF,QAAAA,gBAAgB,CAACC,OAAD,EAAUC,KAAV,CAAhB;AACH,OALD;AAOAzB,MAAAA,MAAM,CAAC+B,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAC7B,QAAAA,IAAD;AAAO+B,QAAAA;AAAP,OAAD,KAAyB;AAC3C9B,QAAAA,OAAO,CAACD,IAAD,CAAP;;AACA,YAAI+B,WAAW,KAAK,KAApB,EAA2B;AAEvBN,UAAAA,eAAe,CAAE,wBAAuBzB,IAAI,CAACgC,QAAS,GAAvC,EAA2C,WAA3C,EAAwD,IAAxD,CAAf;AACAf,UAAAA,SAAS,CAAC,UAAD,EAAajB,IAAI,CAACgC,QAAlB,CAAT;AACAf,UAAAA,SAAS,CAAC,OAAD,EAAUjB,IAAI,CAACiC,KAAf,CAAT;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYzB,QAAQ,CAACC,MAArB;AAEH,SAPD,MAOO,IAAIoB,WAAW,KAAK,mBAApB,EAAyC;AAE5CN,UAAAA,eAAe,CAAE,wBAAuBzB,IAAI,CAACgC,QAAS,GAAvC,EAA2C,WAA3C,EAAwD,IAAxD,CAAf;AAEH,SAJM,MAIA,IAAID,WAAW,KAAK,UAApB,EAAgC;AAEnCN,UAAAA,eAAe,CAAE,gBAAezB,IAAI,CAACgC,QAAS,GAA/B,EAAmC,eAAnC,CAAf;AAEH,SAJM,MAIA;AAEHL,UAAAA,kBAAkB,CAACI,WAAW,GAAG,wBAAf,EAAyC,UAAzC,EAAqD,IAArD,CAAlB;;AAEA,cAAIA,WAAW,KAAK,OAApB,EAA6B;AACzBd,YAAAA,SAAS,CAAC,OAAD,EAAUjB,IAAI,CAACiC,KAAf,CAAT;AACH,WAFD,MAEO;AACHhB,YAAAA,SAAS,CAAC,UAAD,EAAajB,IAAI,CAACgC,QAAlB,CAAT;AACH;AACJ;AACJ,OA3BD;AA6BAlC,MAAAA,MAAM,CAAC+B,EAAP,CAAU,kBAAV,EAA+BzB,QAAD,IAAc;AACxCC,QAAAA,WAAW,CAACD,QAAD,CAAX;AACA,cAAMgC,IAAI,GAAG1B,QAAQ,CAAC2B,cAAT,CAAwB,MAAxB,CAAb;AACAD,QAAAA,IAAI,CAACE,SAAL,GAAiBF,IAAI,CAACG,YAAtB;AACH,OAJD;AAMAzC,MAAAA,MAAM,CAAC+B,EAAP,CAAU,eAAV,EAA4BW,KAAD,IAAW;AAClCrC,QAAAA,cAAc,CAACqC,KAAD,CAAd;AACH,OAFD;AAIA1C,MAAAA,MAAM,CAAC+B,EAAP,CAAU,gBAAV,EAA4B,MAAM;AAC9B,cAAMG,QAAQ,GAAG1B,cAAc,CAAC,UAAD,CAA/B;;AACA,YAAI0B,QAAQ,KAAK,EAAjB,EAAqB;AACjB,gBAAMC,KAAK,GAAG3B,cAAc,CAAC,OAAD,CAA5B;AACAR,UAAAA,MAAM,CAAC2C,IAAP,CAAY,eAAZ,EAA6B;AAACT,YAAAA,QAAQ,EAAEA,QAAX;AAAqBC,YAAAA,KAAK,EAAEA;AAA5B,WAA7B;AACH,SAHD,MAGO;AACHnC,UAAAA,MAAM,CAAC2C,IAAP,CAAY,UAAZ;AACH;AACJ,OARD;AAUA3C,MAAAA,MAAM,CAAC+B,EAAP,CAAU,gBAAV,EAA6Ba,WAAD,IAAiB;AACzC,cAAMpB,OAAO,GAAI,GAAEoB,WAAY,4DAA/B;AACA,cAAMnB,KAAK,GAAG,uBAAd;AACAF,QAAAA,gBAAgB,CAACC,OAAD,EAAUC,KAAV,CAAhB;AACH,OAJD;AAKH;AACJ,GAhEQ,EAgEN,EAhEM,CAAT;AAkEA,sBACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,iBAAd;AAAiC,MAAA,IAAI,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,MAAM,EAAE,IAAvB;AAA6B,QAAA,SAAS,EAAErB,WAAxC;AAAqD,QAAA,WAAW,EAAEA,WAAlE;AAA+E,QAAA,IAAI,EAAE,QAArF;AAA+F,QAAA,IAAI,EAAEF,IAArG;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE,QAAd;AAAwB,UAAA,IAAI,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEI,QAA1B;AAAoC,QAAA,WAAW,EAAEF,WAAjD;AAA8D,QAAA,IAAI,EAAE,MAApE;AAA4E,QAAA,IAAI,EAAEF,IAAlF;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,gBAAgB,EAAEmB,gBAAhC;AAAkD,UAAA,MAAM,EAAErB;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAtHuBC,U;;KAAAA,U","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport \"../styles/ChatScreen.css\"\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport io from \"socket.io-client\"\r\nimport Header from \"../components/Header\";\r\nimport ChatContainer from \"../components/ChatContainer\";\r\nimport MessageInput from \"../components/MessageInput\";\r\n\r\nconst ENDPOINT = \"http://localhost:5000/\"\r\n\r\nconst socket = io(ENDPOINT)\r\n\r\nexport default function ChatScreen() {\r\n\r\n    const [user, setUser] = useState()\r\n    const [onlineUsers, setOnlineUsers] = useState([])\r\n    const [messages, setMessages] = useState([])\r\n\r\n    const getCookieValue = (cookieName) => {\r\n        const name = cookieName + \"=\"\r\n        const allCookies = document.cookie.split(';')\r\n        for (let i=0; i < allCookies.length; i++) {\r\n            const cookie = allCookies[i].trim()\r\n            if (cookie.startsWith(name)) {\r\n                return cookie.split(\"=\")[1]\r\n            }\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    const setCookie = (cookieName, cookieValue) => {\r\n        document.cookie = cookieName + \"=\" + cookieValue + \";\"\r\n    }\r\n\r\n    const showCommandError = (command) => {\r\n        showErrorMessage(`Sorry, ${command} is not a valid command. Please try again.`, \"Command Error\")\r\n    }\r\n\r\n    const showErrorMessage = (message, title) => {\r\n        NotificationManager.error(message, title, 5000)\r\n    }\r\n\r\n    const showInfoMessage = (message, title) => {\r\n        NotificationManager.info(message, title, 5000)\r\n    }\r\n\r\n    const showSuccessMessage = (message, title) => {\r\n        NotificationManager.success(message, title, 5000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on(\"invalid color\", (newColor) => {\r\n                newColor = newColor.split('#')[1]\r\n                const message = `${newColor} is not a valid color code.`\r\n                const title = \"Error: Invalid Color Code\"\r\n                showErrorMessage(message, title)\r\n            })\r\n\r\n            socket.on(\"new user\", ({user, itemChanged}) => {\r\n                setUser(user)\r\n                if (itemChanged === \"new\") {\r\n\r\n                    showInfoMessage(`Welcome to the chat, ${user.username}.`, \"Hi there!\", 5000)\r\n                    setCookie(\"username\", user.username)\r\n                    setCookie(\"color\", user.color)\r\n                    console.log(document.cookie)\r\n\r\n                } else if (itemChanged === \"existing username\") {\r\n\r\n                    showInfoMessage(`Welcome to the chat, ${user.username}.`, \"Hi there!\", 5000)\r\n\r\n                } else if (itemChanged === \"existing\") {\r\n\r\n                    showInfoMessage(`Hello again, ${user.username}.`, \"Welcome back!\")\r\n\r\n                } else {\r\n\r\n                    showSuccessMessage(itemChanged + \" successfully changed.\", \"Success!\", 5000)\r\n\r\n                    if (itemChanged === \"Color\") {\r\n                        setCookie(\"color\", user.color)\r\n                    } else {\r\n                        setCookie(\"username\", user.username)\r\n                    }\r\n                }\r\n            })\r\n\r\n            socket.on(\"updated messages\", (messages) => {\r\n                setMessages(messages)\r\n                const chat = document.getElementById(\"chat\")\r\n                chat.scrollTop = chat.scrollHeight\r\n            })\r\n\r\n            socket.on(\"updated users\", (users) => {\r\n                setOnlineUsers(users)\r\n            })\r\n\r\n            socket.on(\"user connected\", () => {\r\n                const username = getCookieValue(\"username\")\r\n                if (username !== \"\") {\r\n                    const color = getCookieValue(\"color\")\r\n                    socket.emit(\"existing user\", {username: username, color: color})\r\n                } else {\r\n                    socket.emit(\"new user\")\r\n                }\r\n            })\r\n\r\n            socket.on(\"username taken\", (newUsername) => {\r\n                const message = `${newUsername} has already been taken. Please pick a different username.`\r\n                const title = \"Error: Username Taken\"\r\n                showErrorMessage(message, title)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <Header text={\"C H A T R O O M\"} type={\"main\"}/>\r\n            <div className={\"mainContainer\"}>\r\n                <ChatContainer header={true} listItems={onlineUsers} onlineUsers={onlineUsers} type={\"online\"} user={user}>\r\n                    <Header text={\"Online\"} type={\"sub\"}/>\r\n                </ChatContainer>\r\n                <ChatContainer listItems={messages} onlineUsers={onlineUsers} type={\"chat\"} user={user}>\r\n                    <MessageInput showCommandError={showCommandError} socket={socket}/>\r\n                </ChatContainer>\r\n            </div>\r\n            <NotificationContainer/>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}