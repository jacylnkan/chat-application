{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\School\\\\Years\\\\Fall 2020\\\\SENG513\\\\chat\\\\client\\\\src\\\\components\\\\Message.js\";\nimport React from 'react';\nimport \"../styles/Message.css\";\nexport default function Message({\n  item,\n  onlineUsers,\n  user\n}) {\n  const emojiMap = {\n    \":)\": \"1F642\",\n    \":(\": \"1F641\",\n    \":o\": \"1F62E\",\n    \":D\": \"1F600\"\n  };\n\n  const convertEmojis = text => {\n    let re = new RegExp(/(:[o)(])/, 'g');\n    let match;\n\n    while (match = re.exec(text)) {\n      let emojiString = String.fromCodePoint(parseInt(emojiMap[match[1]], 16));\n      text = text.replace(match[1], emojiString);\n    }\n\n    return text;\n  };\n\n  const getCorrectColor = () => {\n    let color = \"black\";\n\n    if (item && user) {\n      let correctUser = onlineUsers.filter(object => {\n        return object.username === item.username;\n      });\n\n      if (correctUser.length > 0) {\n        color = correctUser[0].color;\n      }\n    }\n\n    return color;\n  };\n\n  const getTextStyle = () => {\n    let textStyle = \"\";\n\n    if (item && user) {\n      if (item.socketId === user.socketId) {\n        textStyle = \" bold\";\n      }\n    }\n\n    return textStyle;\n  };\n\n  const getSpacing = () => {\n    return \" \" + item.type + \"Spacing\";\n  };\n\n  const getYouText = () => {\n    if (item.username === user.username && item.type === \"users\") {\n      return \" (You)\";\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"entireMessage\" + getSpacing(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msgInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\" + getTextStyle(),\n        style: {\n          color: getCorrectColor()\n        },\n        children: item.username + getYouText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), item.type === \"message\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timestamp text\" + getTextStyle(),\n        children: [\"at \", item.timestamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), console.log(convertEmojis(item.msg)), item.type === \"message\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text\",\n      id: \"messageItem\",\n      children: convertEmojis(item.msg)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_c = Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/HP/Documents/School/Years/Fall 2020/SENG513/chat/client/src/components/Message.js"],"names":["React","Message","item","onlineUsers","user","emojiMap","convertEmojis","text","re","RegExp","match","exec","emojiString","String","fromCodePoint","parseInt","replace","getCorrectColor","color","correctUser","filter","object","username","length","getTextStyle","textStyle","socketId","getSpacing","type","getYouText","timestamp","console","log","msg"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"../styles/Message.css\"\r\n\r\nexport default function Message({item, onlineUsers, user}) {\r\n\r\n    const emojiMap = {\r\n        \":)\": \"1F642\", \":(\": \"1F641\", \":o\": \"1F62E\", \":D\": \"1F600\"\r\n    }\r\n\r\n    const convertEmojis = (text) => {\r\n        let re = new RegExp(/(:[o)(])/, 'g')\r\n        let match\r\n        while (match = re.exec(text)) {\r\n            let emojiString = String.fromCodePoint(parseInt(emojiMap[match[1]], 16))\r\n            text = text.replace(match[1], emojiString)\r\n        }\r\n        return text\r\n    }\r\n\r\n    const getCorrectColor = () => {\r\n        let color = \"black\"\r\n        if (item && user) {\r\n            let correctUser = onlineUsers.filter(object => {\r\n                return object.username === item.username\r\n            })\r\n            if (correctUser.length > 0) {\r\n                color = correctUser[0].color\r\n            }\r\n        }\r\n        return color\r\n    }\r\n\r\n    const getTextStyle = () => {\r\n        let textStyle = \"\"\r\n        if (item && user) {\r\n            if (item.socketId === user.socketId) {\r\n                textStyle = \" bold\"\r\n            }\r\n        }\r\n        return textStyle\r\n    }\r\n\r\n    const getSpacing = () => {\r\n        return \" \" + item.type + \"Spacing\"\r\n    }\r\n\r\n    const getYouText = () => {\r\n        if (item.username === user.username && item.type === \"users\") {\r\n            return \" (You)\"\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    return (\r\n        <div className={\"entireMessage\" + getSpacing()}>\r\n            <div className={\"msgInfo\"}>\r\n                <p className={\"name\" + getTextStyle()} style={{color: getCorrectColor()}}>{item.username + getYouText()}</p>\r\n                {item.type === \"message\" && <p className={\"timestamp text\" + getTextStyle()}>at {item.timestamp}</p>}\r\n            </div>\r\n            {console.log(convertEmojis(item.msg))}\r\n            {item.type === \"message\" && <p className={\"text\"} id={\"messageItem\"}>{convertEmojis(item.msg)}</p>}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}