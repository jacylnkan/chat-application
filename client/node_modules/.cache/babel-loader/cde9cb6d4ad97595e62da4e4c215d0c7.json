{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\School\\\\Years\\\\Fall 2020\\\\SENG513\\\\chat\\\\client\\\\src\\\\screens\\\\ChatScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/ChatScreen.css\";\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport io from \"socket.io-client\";\nimport Header from \"../components/Header\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport MessageInput from \"../components/MessageInput\";\nconst ENDPOINT = \"http://localhost:5000/\";\nconst socket = io(ENDPOINT);\nexport default function ChatScreen() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n\n  const showErrorMessage = (message, title) => {\n    NotificationManager.error(message, title, 5000);\n  };\n\n  const showInfoMessage = (message, title) => {\n    NotificationManager.info(message, title, 5000);\n  };\n\n  const showSuccessMessage = (message, title) => {\n    NotificationManager.success(message, title, 5000);\n  };\n\n  const checkCookie = () => {};\n\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"invalid color\", newColor => {\n        newColor = newColor.split('#')[1];\n        const message = `${newColor} is not a valid color code.`;\n        const title = \"Error: Invalid Color Code\";\n        showErrorMessage(message, title);\n      });\n      socket.on(\"new user\", ({\n        user,\n        itemChanged\n      }) => {\n        setUser(user);\n\n        if (itemChanged === \"new\") {\n          showInfoMessage(`Welcome to the chat, ${user.username}.`, \"Hi there!\", 5000);\n        } else {\n          showSuccessMessage(itemChanged + \" successfully changed.\", \"Success!\", 5000);\n        }\n      });\n      socket.on(\"updated messages\", messages => {\n        setMessages(messages);\n        const chat = document.getElementById(\"chat\");\n        chat.scrollTop = chat.scrollHeight;\n      });\n      socket.on(\"username taken\", newUsername => {\n        const message = `${newUsername} has already been taken. Please pick a different username.`;\n        const title = \"Error: Username Taken\";\n        showErrorMessage(message, title);\n      });\n      socket.on(\"updated users\", users => {\n        setOnlineUsers(users);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"C H A T R O O M\",\n      type: \"main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(ChatContainer, {\n        header: true,\n        listItems: onlineUsers,\n        onlineUsers: onlineUsers,\n        type: \"online\",\n        user: user,\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          text: \"Online\",\n          type: \"sub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n        listItems: messages,\n        onlineUsers: onlineUsers,\n        type: \"chat\",\n        user: user,\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          addNewMessage: setMessages,\n          socket: socket,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatScreen, \"MbQR8BwFYL48i0/na7jDaTOmvuU=\");\n\n_c = ChatScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"sources":["C:/Users/HP/Documents/School/Years/Fall 2020/SENG513/chat/client/src/screens/ChatScreen.js"],"names":["React","useEffect","useState","NotificationContainer","NotificationManager","io","Header","ChatContainer","MessageInput","ENDPOINT","socket","ChatScreen","user","setUser","onlineUsers","setOnlineUsers","messages","setMessages","showErrorMessage","message","title","error","showInfoMessage","info","showSuccessMessage","success","checkCookie","on","newColor","split","itemChanged","username","chat","document","getElementById","scrollTop","scrollHeight","newUsername","users"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport \"../styles/ChatScreen.css\"\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport io from \"socket.io-client\"\r\nimport Header from \"../components/Header\";\r\nimport ChatContainer from \"../components/ChatContainer\";\r\nimport MessageInput from \"../components/MessageInput\";\r\n\r\nconst ENDPOINT = \"http://localhost:5000/\"\r\n\r\nconst socket = io(ENDPOINT)\r\n\r\nexport default function ChatScreen() {\r\n\r\n    const [user, setUser] = useState()\r\n    const [onlineUsers, setOnlineUsers] = useState([])\r\n    const [messages, setMessages] = useState([])\r\n\r\n    const showErrorMessage = (message, title) => {\r\n        NotificationManager.error(message, title, 5000)\r\n    }\r\n\r\n    const showInfoMessage = (message, title) => {\r\n        NotificationManager.info(message, title, 5000)\r\n    }\r\n\r\n    const showSuccessMessage = (message, title) => {\r\n        NotificationManager.success(message, title, 5000)\r\n    }\r\n\r\n    const checkCookie = () => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on(\"invalid color\", (newColor) => {\r\n                newColor = newColor.split('#')[1]\r\n                const message = `${newColor} is not a valid color code.`\r\n                const title = \"Error: Invalid Color Code\"\r\n                showErrorMessage(message, title)\r\n            })\r\n\r\n            socket.on(\"new user\", ({user, itemChanged}) => {\r\n                setUser(user)\r\n                if (itemChanged === \"new\") {\r\n                    showInfoMessage(`Welcome to the chat, ${user.username}.`, \"Hi there!\", 5000)\r\n                } else {\r\n                    showSuccessMessage(itemChanged + \" successfully changed.\", \"Success!\", 5000)\r\n                }\r\n            })\r\n\r\n            socket.on(\"updated messages\", (messages) => {\r\n                setMessages(messages)\r\n                const chat = document.getElementById(\"chat\")\r\n                chat.scrollTop = chat.scrollHeight\r\n            })\r\n\r\n            socket.on(\"username taken\", (newUsername) => {\r\n                const message = `${newUsername} has already been taken. Please pick a different username.`\r\n                const title = \"Error: Username Taken\"\r\n                showErrorMessage(message, title)\r\n            })\r\n\r\n            socket.on(\"updated users\", (users) => {\r\n                setOnlineUsers(users)\r\n            })\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <Header text={\"C H A T R O O M\"} type={\"main\"}/>\r\n            <div className={\"mainContainer\"}>\r\n                <ChatContainer header={true} listItems={onlineUsers} onlineUsers={onlineUsers} type={\"online\"} user={user}>\r\n                    <Header text={\"Online\"} type={\"sub\"}/>\r\n                </ChatContainer>\r\n                <ChatContainer listItems={messages} onlineUsers={onlineUsers} type={\"chat\"} user={user}>\r\n                    <MessageInput addNewMessage={setMessages} socket={socket} user={user}/>\r\n                </ChatContainer>\r\n            </div>\r\n            <NotificationContainer/>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}